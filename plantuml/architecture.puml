@startuml
'https://plantuml.com/class-diagram

package config {
    class Crypto{
        - {static}PASSWORD: final char[]
        - {static} SALT: final byte[]
        - {static} base64Encode(bytes: byte[]): String
        - {static} base 64Decode(str: String): byte[]
        + {static} Encrypt(str : String): String
        + {static} Decrypt( str: String) : String
    }
    class LoadSet{
        + {static} loadSet(file: String, ask: boolean): String[]
        + {static} loadSet(file: String): String[]
    }

    class SaveSet{
        + savePW(pass:String, out: PrintStream): void

    }
    class Settings{
        - {static} p: Properties
        - {static} propertyFilename: final String
        + {static} IS_JAVA_1_6: boolean
        + {static} sshHostKeyVerificationFile: String
        + {static} defaultWidth : final String
        + {static} defaultHeight : final String
        + {static} defaultX : final String
        + {static} defaultY: final String
        + {static} maxConnections: in
        + {static} enableResuming: boolean
        + {static} enableUploadResuming: boolean
        + {static} noUploadResumingQuestion: boolean
        + {static} askToResume: boolean
        + {static} reconnect: boolean
        + {static} uiRefresh: int
        + {static} logFlushInterval: int
        + {static} useLogFlusher: boolean
        + {static} ftpTransferThreadPause: int
        + {static} smallSize: int
        + {static} smallSizeUp: int
        + {static} shortProgress: boolean
        + {static} defaultFtpPasvMode: String
        + {static} defaultEnableDebug: String
        + {static} FILL OUT THE REST - Left off on line 60
    }
}
package event {
    interface Acceptor{
        + accept(e: Event): void
    }
    abstract class Event{
        + {abstract} eventCode: int
    }
    class EventCollector implements Acceptor{
        # buffer: Vector
        + accept(e: Event): void
    }
    interface EventHandler{
        +handle(e:Event): boolean
    }
    class EventProcessor implements Runnable, Acceptor, FtpEventConstants, EventHandler{
        - {static} table: Hashtable
        - buffer: Vector
        - done: boolean
        + accept(e:Event): void
        + {static} addHandler(eventCode: int, h: EventHandler): void
        + handle(e:Event): boolean
        + run(): void
    }
    class FtpEvent extends Event{
        - code: int
        - message: String
        + eventMsg(): String
        + eventCode(): int
    }
    interface FtpEventConstants {
        + {static} FTPCommand: final int
        + {static} FTPPrompt: final int
        + {static} FTPShutdown: final int
    }
    class FtpEventHandler implements EventHandler{
       -{static} commands: ArrayList
       - client: FtpClient
       - methods: Hashtable
       + open(args:Vector): void
       + disconnect(args:Vector): void
       + cd(args: Vector): void
       + pwd(args: Vector): void
       + get(args: Vector): void
       + put(args: Vector): void
       + quit(args: Vector): void
       + handle(e: Event): boolean

    }
}
package gui{
    package base{
        package dir{
            class ColoredCellRenderer
            interface Dir
            class DirCanvas
            class DirCellRenderer extends DefaultListCellRenderer
            class DirComponent extends DirPanel implements ListSelectionListener
            class DirEntry
            class DirLister implements ActionListener
            class DirPanel extends HPanel implements Dir
            class MaterializedTableModel extends AbstractTableModel
            class TableUtils
        }
        class AppMenuBar
        class DownloadList
        class DownloadQueue
        class FtpHost
        class LocalDir
        class LogFlusher
        class Properties
        class RemoteDir
        class ResumeDialog
        class StatusCanvas
        class StatusPanel
        class UITool
        class UIUtils{
        class Spawn
        class UIUtils
        }
    }
    package framework{
        class NEEDTOADD
    }
    package hostchooser{
        class HostChooser
        class NfsHostChooser
        class SftpHostChooser
        class SmbHostChooser
        class WebdavHostChooser
    }
    package tasks{
        class NEEDTOADD2
    }
}
package net{
    package servers{
        class FtpServer
        class FtpServerSocket
    }
    package wrappers{
        class HttpTransfer
        class NfsConnection
        class Sftp2Connection{
            class MyUserInfo
            class Sftp2Connection
        }
        class Sftp2Transfer
        class Sftp2URLConnection
        class SmbConnection
        class SmbTest
        class SmbTransfer
        class StartConnection
        class WebdavConnection
    }
    interface BasicConnection
    class ConnectionHandler
    interface ConnectionListener
    class DataConnection
    class FilesystemConnection
    class FtpClient
    class FtpConnection
    interface FtpConstants
    class FtpKeepAliveThread
    class FtpTransfer
    class FtpURLConnection
    class FtpURLStreamHandler
    class JConnection
    class Transfer
}
package system{
    package logging{
        class Log
        class Log4Logger
        interface Logger
        class SystemLogger
    }
    class CommandLine
    class LocalIO
    class StringUtils
    class UpdateDaemon
}
package tools{
    class FileSearch{
        class FileSearch
        class Getter
    }
    class HttpSpider{
        class Holer
        class HttpSpider
    }
    class RSSFeeder
    class RSSParser
    class Shell
}
package util{
    class JHostChooser
    class JRawConnection
    class JReciever
    class RawConnection
    class ZipFileCreator
}
class JFtp
class JFtpApplet

LoadSet -.-> Settings
LoadSet -.-> UIUtils
LoadSet -.-> Crypto
LoadSet -.-> JFtp
SaveSet -.-> Settings
SaveSet -.-> Crypto
EventCollector -.-> EventProcessor
EventProcessor -.-> EventHandler
FtpEventHandler --> FtpClient
Dir --> BasicConnection
Dir --> DownloadList
DirCanvas --> Dir
DirCanvas -.-> UITool
DirCanvas -.-> PathChanger
DirCanvas -.-> GUIDefaults
DirCellRenderer --> ImageIcon
DirCellRenderer -.-> DirEntry
DirCellRenderer -.-> GUIDefaults
DirCellRenderer -.-> RemoteDir
DirCellRenderer -.-> LocalDir
DirComponent --> DirPanel
DirComponent -.-> ColoredCellRenderer
DirEntry -.-> HImage
DirEntry -.-> ImageIcon
DirEntry -.-> Image
DirLister --> BasicConnection
DirLister -.-> FtpConnection
DirLister -.-> FilesystemConnection

DirPanel --> DirEntry
DirPanel --> DownloadList
DirPanel --> BasicConnection
TableUtils --> TableCellRenderer
TableUtils --> TableColumnModel
TableUtils --> TableModel
TableUtils --> TableColumn





@enduml